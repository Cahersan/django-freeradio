# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-07 10:47
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django_filepicker.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('talent', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100)),
                ('url', models.URLField(max_length=255, verbose_name='player URL')),
                ('guid', models.CharField(max_length=255, unique=True)),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-published',),
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(max_length=30, unique=True)),
                ('subtitle', models.CharField(max_length=150)),
                ('author', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=255)),
                ('public', models.BooleanField(default=True)),
                ('banner', django_filepicker.models.FPFileField(max_length=255, upload_to='')),
                ('url', models.URLField(max_length=255, verbose_name='feed URL')),
                ('description', models.TextField(blank=True, null=True)),
                ('artwork', django_filepicker.models.FPFileField(upload_to='podcasts')),
            ],
            options={
                'ordering': ('slug',),
            },
        ),
        migrations.CreateModel(
            name='SeriesPresenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('presenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='podcasts', to='talent.Presenter')),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='podcasting.Series')),
            ],
            options={
                'db_table': 'podcasting_series_presenters',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='SubscriptionLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store', models.CharField(choices=[('itunes', 'iTunes'), ('stitcher', 'Stitcher'), ('pcast', 'Pocket Casts'), ('overcast', 'Overcast')], max_length=20)),
                ('url', models.URLField(max_length=255, verbose_name='URL')),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_links', to='podcasting.Series')),
            ],
            options={
                'ordering': ('store',),
            },
        ),
        migrations.AddField(
            model_name='series',
            name='presenters',
            field=models.ManyToManyField(through='podcasting.SeriesPresenter', to='talent.Presenter'),
        ),
        migrations.AddField(
            model_name='episode',
            name='series',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='podcasting.Series'),
        ),
        migrations.AlterUniqueTogether(
            name='subscriptionlink',
            unique_together=set([('store', 'series')]),
        ),
        migrations.AlterUniqueTogether(
            name='seriespresenter',
            unique_together=set([('presenter', 'series')]),
        ),
    ]
